-- MySQL Script generated by MySQL Workbench
-- Mon Apr 25 11:35:58 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema codedrop
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema codedrop
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `codedrop` DEFAULT CHARACTER SET utf8 ;
USE `codedrop` ;

-- -----------------------------------------------------
-- Table `codedrop`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `full_name` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `salt` VARCHAR(255) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`communities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`communities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `admin` VARCHAR(255) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `user_id` INT NOT NULL,
  `description` VARCHAR(255) NULL,
  `primary_language` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_communities_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_communities_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`friends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`friends` (
  `user_id` INT NOT NULL,
  `friend_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  INDEX `fk_friends_users_idx` (`user_id` ASC),
  INDEX `fk_friends_users1_idx` (`friend_id` ASC),
  PRIMARY KEY (`user_id`, `friend_id`),
  CONSTRAINT `fk_friends_users`
	FOREIGN KEY (`user_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_friends_users1`
	FOREIGN KEY (`friend_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`groups` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`messages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `user2_id` INT NOT NULL,
  `drop` TEXT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_messages_users1_idx` (`user_id` ASC),
  INDEX `fk_messages_users2_idx` (`user2_id` ASC),
  CONSTRAINT `fk_messages_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_messages_users2`
	FOREIGN KEY (`user2_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`c_drops`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`c_drops` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `drop` TEXT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `community_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_c_drops_communities1_idx` (`community_id` ASC),
  INDEX `fk_c_drops_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_c_drops_communities1`
	FOREIGN KEY (`community_id`)
	REFERENCES `codedrop`.`communities` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_c_drops_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`usergroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`usergroups` (
  `user_id` INT NOT NULL,
  `group_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `group_id`),
  INDEX `fk_users_has_groups_groups1_idx` (`group_id` ASC),
  INDEX `fk_users_has_groups_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_users_has_groups_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_groups_groups1`
	FOREIGN KEY (`group_id`)
	REFERENCES `codedrop`.`groups` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `codedrop`.`g_drops`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `codedrop`.`g_drops` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `drop` TEXT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `group_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_g_drops_groups1_idx` (`group_id` ASC),
  INDEX `fk_g_drops_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_g_drops_groups1`
	FOREIGN KEY (`group_id`)
	REFERENCES `codedrop`.`groups` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
  CONSTRAINT `fk_g_drops_users1`
	FOREIGN KEY (`user_id`)
	REFERENCES `codedrop`.`users` (`id`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
